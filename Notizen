..:: Notizen ::..

- gabriel-wolf.de.media
    + beim einchecken von mediendateien muss folgendes passieren
      + die dateinamen (Verzeichnis mit den hochauflösenden Dateien) werden geprüft >> ./main.py
      + alle erforderlichen alternativen werden gecodet
        + foto (wird leicht nachgeschärft)
          1. passende Größen erstellen (400px, 600px, 800px, 1000px, 1500px, 2000px, 2500px)
             + jpg:                             convert -strip -define jpeg:dct-method=float -geometry 400x -sharpen 0x0.5 -quality 90 input.jpg input-400x.jpg
             // - webp (umweg über png nötig!):    convert -strip -geometry 400x -sharpen 0x0.9 input.jpg input-400.png
                                                   cwebp -q 90 -m 6 input-400x.png -o input-400x.webp

               + vorschaubilder in low quality:    convert -strip -geometry 400x -blur 0x20 -quality 5 input.jpg output-preload.jpg
                                                   cwebp -q 1 -m 6 input-400.png -o input-preview.webp

               alles in einem verzeichnis:  find . -iname '*.png' | parallel 'cwebp -q 90 -m 6 {} -o {}.webp'

          2. // metadaten löschen (nicht mehr nötig, -strip erledigt das bereits bei convert)
                exiftool -all= input.jpg
                for i in *.jpg; do echo "Processing $i"; exiftool -all= "$i"; done

          3. Creative Commons Metadaten schreiben
             exiftool -P -overwrite_original_in_place -OwnerName='Gabriel Wolf' -IFD0:Artist='Gabriel Wolf' -IPTC:By-line='Gabriel Wolf' -XMP-dc:Creator='Gabriel Wolf' -IPTC:By-lineTitle='Photographer' -IPTC:Contact='email: info@gabriel-wolf.de; website: https://gabriel-wolf.de' -XMP-iptcCore:CreatorWorkURL='https://gabriel-wolf.de' -d %Y -IFD0:Copyright='Creative Commons CC-BY 4.0' -d %Y -IPTC:CopyrightNotice='https://creativecommons.org/licenses/by/4.0/deed.de' -d %Y -XMP-dc:Rights='Creative Commons CC-BY 4.0' input.jpg

        + audio
          + mp3s werden aus qualitätsgründen nicht neu codiert, sondern einfach kopiert. (incl. logic hinweise rauslöschen)
            + ffmpeg -i input.mp3 -metadata originator= -metadata encoded_by= -metadata encoder_settings= -c:v copy -c:a copy output.mp3

          + wavs
            + mp3:    ffmpeg -i input.wav -metadata originator= -metadata encoded_by= -codec:a libmp3lame -q:a 0 output.mp3
            + ogg:    ffmpeg -i input.wav -metadata originator= -metadata encoded_by= -metadata encoder_settings= -codec:a libvorbis -q:a 9 output.ogg
            + flac:   ffmpeg -i input.wav -metadata originator= -metadata encoded_by= -metadata encoder_settings= -compression_level 8 output.flac

        + video
          + Platzhalter erzeugen:           ffmpeg -i input.mp4 -ss 00:00:00.200 -vframes 1 output.jpg
                        datenreduzieren:    convert -strip -geometry 400x -blur 0x20 -quality 1 output.jpg output-preload.jpg
          + webm:   ffmpeg -i input.mp4 -vcodec libvpx -b:v 5120k -c:a libvorbis -ac 2 -b:a 192k -ar 44100 output.webm
          + ogg:    ffmpeg -i input.mp4 -c:v libtheora -c:a libvorbis -b:v 5120k -b:a 192k -ar 44100 output.ogg
          + mp4:    ffmpeg -i input.mp4 -vcodec h264 -vb 5120k -acodec aac -ab 192k -pix_fmt yuv420p output.mp4

        + text
          convert_txt_to_html_to_json_positive input.txt output.json

        + chmod 644 *
